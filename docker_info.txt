Container content: TensorFlow r0.12.0 rc1 CUDA8.0 cuDNN 5 Python 3.4.3

Run command:
nvidia-docker run --rm -ti ferreirafabio/deepepisodicmemory

Run command with ~/Downloads directory of host OS attached
nvidia-docker run -v ~Downloads:/Downloads --rm -ti ferreirafabio/deepepisodicmemory

Run command with local dir attached
nvidia-docker run -v /localhome/rothfuss:/local --rm -ti ferreirafabio/deepepisodicmemory

Then run training:
python3 train_model.py --path /local/data/ArtificialFlyingBlobs/tfrecords --event_log_dir /local/training/log --output_dir /local/training/dumps --num_epochs 500000

Load trained model:
python3 train_model.py --path /local/data/ArtificialFlyingBlobs/tfrecords --event_log_dir /local/training/log --output_dir /local/training/dumps --num_epochs 500000 --pretrained_model /local/training/dumps

Running tensorboard:
tensorboard --logdir=/local/training/log/ --port 6006

Explicit command to origin:
nvidia-docker run -it -p 8888:8888 tensorflow/tensorflow:0.12.0-rc1-devel-gpu-py3

newer version:
nvidia-docker run -it tensorflow/tensorflow:1.0.0-devel-gpu-py3

save a docker image and commit it to docker hub:
1. run image, make changes to the image
2. in another terminal, run "nvidia-docker ps -a"
3. get the container_id
4. run "nvidia-docker commit <container_id> ferreirafabio/deepepisodicmemory 

